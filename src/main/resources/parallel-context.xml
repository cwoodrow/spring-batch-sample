<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"	
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<!-- DB configuration -->
	<jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:org/springframework/batch/core/schema-h2.sql" />
    </jdbc:embedded-database>
 
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource"/>
	</bean>

	<!-- Job repository configuration -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="H2" />
	</bean>
	
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="5" />
	</bean>

	<bean id="itemReader" scope="step"
		class="org.springframework.batch.item.file.FlatFileItemReader" >
		<property name="resource" value="#{stepExecutionContext[fileName]}"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper"/>
		</property>
		<property name="strict" value="true" />
	</bean>

	<bean id="partitioner"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<property name="keyName" value="fileName" />
		<property name="resources" value="classpath:/data/*.txt" />
	</bean>
	
	<bean id="printWriter" class="com.serli.batch.PrintWriter"/>

	<batch:job id="printJobParallel">
		<batch:step id="parallelProcess" >
          <batch:partition step="readWrite" partitioner="partitioner" >
                <batch:handler task-executor="taskExecutor" grid-size="1" />
          </batch:partition>
        </batch:step>
   	</batch:job>
   	
   	
   	<batch:step id="readWrite">
   		<batch:tasklet >
			<batch:chunk reader="itemReader" writer="printWriter"
				commit-interval="2"/>
		</batch:tasklet>
   	</batch:step>

</beans>